{"meta":{"title":"Jed.bz","subtitle":"Home of Jed Lippold","description":"A personal websote","author":"Jed Lippold","url":"https://jed.bz"},"pages":[{"title":"about","date":"2016-07-24T02:30:24.000Z","updated":"2017-06-24T20:49:59.000Z","comments":true,"path":"about/index.html","permalink":"https://jed.bz/about/index.html","excerpt":"","text":"About MeHello! My name is Jed Lippold and I live Pennsylvania, about an hour outside of New York City. 7 years ago, I was a teacher. I left teaching to start by own business, and now I build awesome educational tools full time. I created, then sold Skedula.com and PupilPath.com, they are the #1 teacher tools in New York! In my spare time, I work on open source projects, play with my 4 daughters, lift weights and play the drums. I enjoy building and shipping product. I&#39;m a developer who loves to write code. I am a software architect who has designed complicated systems. I have managed a team of 20+ developers. I&#39;ve done operations to scale products from 0 to 1,000,000 sessions. I&#39;ve been a product manager, and I&#39;ve built awesome applications. And most of all, I automate. I automate everything, from teaching in the classroom, to the lights in my home."},{"title":"Home Automation","date":"2016-08-14T03:02:28.000Z","updated":"2017-06-24T20:49:59.000Z","comments":true,"path":"apps/Home.Automation.html","permalink":"https://jed.bz/apps/Home.Automation.html","excerpt":"","text":"This is a project that I use in my home everyday. It&#39;s a node.js mash-up of many API&#39;s into one project. It unifies all my devices. Insteon, Harmony, LIFX, Kodi, GeoVision and Ecobee. By bringing these all together, I can trigger complex functions via many interfaces. For example, voice control through Amazon Echo or touch via mobile device ui, or physical insteon keypads. It was also lot&#39;s of fun to write, because it allowed me to use ReactJS, web sockets via socketIo and bootstrap 4. Source code is on github Fork me on GitHub"},{"title":"Coco for DirecTV","date":"2016-08-14T03:02:28.000Z","updated":"2017-06-24T20:49:59.000Z","comments":true,"path":"apps/coco.html","permalink":"https://jed.bz/apps/coco.html","excerpt":"","text":"Coco was my first Objective-C application. I&#39;ve previously written a bunch of web applications in javascript with Cordova/PhoneGap but I really pushed the limitations of that platform, so I wanted to go native. The goal was to make an app that would make it easier to manage DirecTV, and use some of those awesome blurs and transparencies that iOS9 offers. DirecTV has a unpublished API that enabled simple functions like changing channels, but I really wanted to make something that had a full TV guide with imagery. I noticed that the DirecTV website uses an internal API to populate it&#39;s guide. That api is written with Node/Express. After some reverse engineering, I was able to pull live channel data, a feat that no other DTV app in the store does. Lastly, I made a notification center widget for fast channel changing, and a Watch OS app. Fork me on GitHub"},{"title":"Skedula & Pupilpath","date":"2016-08-15T03:02:28.000Z","updated":"2017-06-24T20:49:59.000Z","comments":true,"path":"apps/datacation.html","permalink":"https://jed.bz/apps/datacation.html","excerpt":"","text":"Skedula.com is a classroom management web application that I developed and nurtured for the past 7 years. It was originally written in asp, then re-written with asp.NET and finally ending in a NodeJS API. I always pushed to keep teachers and students first while writing these applications. This was a struggle because school administrators pay for the software. Here&#39;s a list of some of the features that I created and pioneered Data Extractor A winforms application that scraped the internal NYCDOE systems, ATS and HSST. This was a pivotal foundation for the success in New York. PADS As a report card management system, PADS is another key hook. I wrote this before coming to Datacation. It was crucial because it was the foundation of Datacation&#39;s charting components, that eventually became Data Tools then Compass. Before the PADS analysis, there was no drill down from chart to data-set. Skedula Designed, populated and scaled the foundation of the platform. PupilPath A sister parent and student portal to skedula. I created the web application and also the first mobile version using phonegap / javascript. Gradebook The grade book packs a ton of features. Its a one stop shop to submit grades across assignments. Google API&#39;s Before google classroom, I wrote a tool to leverage google apis to distribute to many students. Anecdotal Badges This is a system which adds weights to incidents, which eventually translate to a score and badge Data Tools A data analytical platform that showcased advanced charting and UI&#39;s"},{"title":"gesturePad","date":"2016-07-27T03:02:28.000Z","updated":"2017-06-24T20:49:59.000Z","comments":true,"path":"apps/gesturePad.html","permalink":"https://jed.bz/apps/gesturePad.html","excerpt":"","text":"gesturePad was yet another remote control app that I wrote for my home use. If you look at the video below, it looks and feels like a native app, but it&#39;s all html and js. I intended to open source this with MediaBrowser, but shortly after I completed the app, MediaBrowser became Emby, and I lost interest. Source code is on github. Some old documentation here Fork me on GitHub"},{"title":"My Apps","date":"2016-07-24T02:29:14.000Z","updated":"2017-06-24T20:49:59.000Z","comments":true,"path":"apps/index.html","permalink":"https://jed.bz/apps/index.html","excerpt":"","text":"Commercial Apps Skedula.com &amp; Pupilpath.com - is the evolution of Skedula into a web application for teacher &amp; classroom management. I created, managed and eventually sold these products. They became wildly popular in NYC from 2010-2016. Open source, miscellaneous projects Coco for DirecTV - An advanced remote control for DirecTV WifiSMS - SMS sending from your computer GesturePad - A UI for controlling my home via mobile device Home.Automation - Node API server for controlling my Home This Blog - Built using hexo, this blog uses a custom theme that I composed. Skedula - a school management application I developed from 2002-2009, this is the predecessor to skedula.com"},{"title":"Skedula","date":"2016-07-07T03:02:28.000Z","updated":"2017-06-24T20:49:59.000Z","comments":true,"path":"apps/skedula.html","permalink":"https://jed.bz/apps/skedula.html","excerpt":"","text":"This post is largely for historical purposes to document what Skedula was before it became Skedula.com Skedula was a project I started in 2002. The software had about 6 rewrites over the years, and continually morphed into a more mature and stable project. I was hired by Robert Leder to assist my sister, Tanya, in the program office. This was not the first time I worked in a program office. I helped my brother Wayne in the program office of George Westinghouse High School in my senior year. At the time, UAPC and ATS were the student information systems used in NYC. The biggest problem we faced in the Program Office were the large amount of program changes that occurred. There was no proper student management system. Guidance counselors would fill out a paper form requesting a change and we would try our best to fulfill the change. Classes would quickly become over-sized. By the time we processed the change request, there were no more seats in the requested class so, we had to reject it. As you can imagine, some students would have to sit in the wrong classes for days waiting for a program change. Robert Leder the principal, Tanya Lippold the program chair, and Sony Grandoit the Assistant Principal of Guidance, tasked me to make a system to manage these changes. They placed a lot of trust in me and in my abilities, and for that I will forever be grateful. A great friend and colleague, Eileen Metkiff, came up with the name Skedula, which phonetically sounds like a mix of Dracula and Scheduler. The name was perfect, since we were scheduling students for classes. The PilotThe first iteration was simplistic and crude, but it solved a number of problems. It was only a couple of forms, which updated a few tables. Here&#39;s some stuff I found from my files Design Plans Pilot handouts Misc. Documentation The server architecture was a MSAccess 97 database, accessible via a windows UNC path. The application code was written in VBA. We had about 10 users, who accessed the linked tables via an MSAccess front end. The system kept track of students, class sizes, and course offerings. At the end of each day, we would generate an audit of the changes and upload them via floppy disk into a AS400 machine running UAPC. The counselors were now able to change classes for students in real time, and print out a student schedule. Skedula in LehmanI re-wrote Skedula over the summer of 2004 on my personal time. By the end of 2009, Skedula evolved to be much more than just a scheduling tool. It touched all facets and it was deeply entrenched into the culture of the school. Here&#39;s just some of the features: Report Card generation Add / Drops Testing and Proctors Anecdotal Logs Outreach Events Attendance Student Touch screen Kiosk AP Exams Course Selections Messaging Reporting Transcripts Screenshots There were also some experimental features that I loved to build. For example, the touch screen kiosk. Students were able to print their schedules, report cards and transcripts from a touch screen. This was awesome for me, because students frequently came to my office for new printouts. I also wrote an automated phone system that tied into a 56k modem on my work machine. Parents could call &quot;Skedula&quot; and were greeted with a a Siri-like assistant say, press 0 for attendance, press 1 for grades etc. That was really fun to write. Skedula ran at Lehman High School for 7 years, from 2002-2009. By 2009, Skedula was also running at Stevenson High School, and I was in talks with at least 2 other schools. Robert Leder retired in 2008 and it was time for me to leave. I had plenty more software to write, and Skedula was ready to be reborn."},{"title":"WifiSMS","date":"2016-08-16T03:02:28.000Z","updated":"2017-06-24T20:49:59.000Z","comments":true,"path":"apps/wifisms.html","permalink":"https://jed.bz/apps/wifisms.html","excerpt":"","text":"WifiSMS filled a major void Apple had five years ago. There was no way to send a text message from your computer. So way back on iOS 4, I wrote WifiSMS to do what the messages app does today, send and sync messages between your phone and your computer. Jeff Benjamin from iDownloadBlog, made a great video explaining the functionality I was very surprised to find out that this app had an unexpected user base, particularly iphone users with special needs. Here&#39;s an article and video by iclarified that explains how users with muscular distrophy were jailbreaking to install WifiSMS :-) http://www.iclarified.com/21644/how-jailbreaking-can-improve-the-lives-of-the-disabled-video Fork me on GitHub"},{"title":"blog","date":"2017-06-24T20:49:59.000Z","updated":"2017-06-24T20:49:59.000Z","comments":true,"path":"blog/index.html","permalink":"https://jed.bz/blog/index.html","excerpt":"","text":""},{"title":"about","date":"2016-07-24T02:30:24.000Z","updated":"2017-06-24T20:49:59.000Z","comments":true,"path":"home/index.html","permalink":"https://jed.bz/home/index.html","excerpt":"","text":""},{"title":"resume","date":"2016-07-24T13:18:31.000Z","updated":"2017-06-24T20:49:59.000Z","comments":true,"path":"resume/index.html","permalink":"https://jed.bz/resume/index.html","excerpt":"","text":""}],"posts":[{"title":"Kodi in the car","slug":"Kodi-in-the-car","date":"2017-06-24T23:16:11.000Z","updated":"2017-06-24T23:47:24.000Z","comments":true,"path":"2017/06/24/Kodi-in-the-car/","link":"","permalink":"https://jed.bz/2017/06/24/Kodi-in-the-car/","excerpt":"I setup a raspberry pi running kodi: librelec in my car, this is how I did it.","text":"I setup a raspberry pi running kodi: librelec in my car, this is how I did it. I live in the sticks, so I do a lot of driving with the kids. I&#39;ve been burning DVD&#39;s for the kids, but it&#39;s such a pain in the ass to author DVDs and they get scratched constantly. So, I decided to make a mobile video player from a raspberry pi. Requirements to my build Easy to add new movies Easy to control from the car Automatic playback, and resuming Here&#39;s a pic of my final output: PartsA lot of these items, you may already own so just get creative here - [Vilros Raspberry Pi 3 Basic Starter Kit, Black Case](https://www.amazon.com/gp/product/B01DMFQZXK/ref=oh_aui_detailpage_o07_s01?ie=UTF8&amp;psc=1) - This is the one I bought, but it doesnt matter which one. Just make sure you use a raspberry pi 3, anything earlier is too slow. - This kit comes with a case, charger and heat sinks - [3.5mm Plug (4 Pole) To 3 RCA](https://www.amazon.com/gp/product/B0007V6JCK/ref=oh_aui_detailpage_o09_s00?ie=UTF8&amp;psc=1) - I used one I came with my camcorder, so I didnt buy this - [2.5 inch HDD](https://www.amazon.com/gp/product/B01LYNQXCP/ref=oh_aui_detailpage_o07_s00?ie=UTF8&amp;psc=1) - If you have an old laptop around, you can pull out the hard disk and use it for this. I chose a laptop HDD because of the small physical size and high capacity - [microSDHC drive](https://www.amazon.com/gp/product/B010Q57T02/ref=oh_aui_detailpage_o07_s00?ie=UTF8&amp;psc=1) - Libreelec says a 8gb minimum, but a 16GB disk is safer. - [SATA to USB Cable](https://www.amazon.com/MMNNE-Drive-Adapter-Cable-Supply/dp/B01M03148F/ref=sr_1_45) - You want to be sure that this adapter can pass enough power to the Pi. Either buy an externally powered adapter or use one like above that draws power from 2 usb ports. Miscellaneous hardware purchased at my local hardware store - Wooden Craft board - Wire - rocker switch - extension cord - machine screws LibreelecIt&#39;s super easy to install libreelec, so I won&#39;t go over that. You basically install it on the SD card, then plug the SD card into the Pi, and boot it up. Here are the installation instructions At this point you should have LibreElec installed on the Pi, with a virgin kodi installation running. You want to plug your pi into your TV at home until you get everything configured. THe last step will be to bring it into the car. THe first thing we have to do is configure the Pi to use composite output instead of HDMI. In my honda Pilot, I have AV ports. Buildinstall libreconfigure composite outsetup external hddmetadataremote controlboot scriptsportability (the physical build)","categories":[],"tags":[{"name":"kodi","slug":"kodi","permalink":"https://jed.bz/tags/kodi/"},{"name":"raspberry pi","slug":"raspberry-pi","permalink":"https://jed.bz/tags/raspberry-pi/"}],"keywords":[]},{"title":"Ring doorbell Kodi add-on","slug":"Ring-doorbell-Kodi-add-on","date":"2017-06-24T20:54:18.000Z","updated":"2017-06-24T22:45:16.000Z","comments":true,"path":"2017/06/24/Ring-doorbell-Kodi-add-on/","link":"","permalink":"https://jed.bz/2017/06/24/Ring-doorbell-Kodi-add-on/","excerpt":"Kodi integration of Ring.com video.","text":"Kodi integration of Ring.com video. RingI recently purchased a ring doorbell, and a ring floodlight. I&#39;ve had geovision cameras for over 10 years now, but Ring really wraps it up into neat package with a very high Wife Approval Factor. Since I&#39;ve had the Ring, I&#39;ve been looking for ways to hack it since there&#39;s no public API. Luckily, a few devs have started work to reverse engineer the web services, specifically python-ring-doorbell and doorbot in node.js. With either of these libraries, we can pull recorded videos from ring&#39;s aws-hosted s3 bucket. Of course, this requires a ring.com subscription and personally, I don&#39;t mind paying 30$/year for offsite recordings. I&#39;ve spent a weekend trying to get a live video and audio feed from the doorbell. Ring uses SIP to communicate with its cameras, along with some kind of self expiring SIP address. If interested, quite a few devs (including myself) are trying to find a SIP library to extract feeds. You can follow and contribute on the github issue. KodiLive video would be so awesome in Kodi, but impossible until someone reverse engineers the SIP format. Playback of recorded videos is very possible, and really easy to build thanks to tchellomello&#39;s python library. I wrapped up the library into the Ring Video Doorbell kodi add-on. The addon will merge all doorbell&#39;s, stickup cams and floodlights into one list view, with all motion, live view, and ding events. Then you just click the event, and it plays the video. Kodi forum thread DownloadI setup a kodi repository, you can download a zip of the repo here. Once you install the repo, then you can install the add-on and get updates. The source code of the add-on is here. ScreenshotsRing 1 Ring 2 Ring 3","categories":[],"tags":[{"name":"home automation","slug":"home-automation","permalink":"https://jed.bz/tags/home-automation/"},{"name":"kodi","slug":"kodi","permalink":"https://jed.bz/tags/kodi/"}],"keywords":[]},{"title":"Amazon Dash, DD-WRT and IFTTT","slug":"Amazon-dash-dd-wrt-and-ifttt","date":"2016-07-25T11:41:28.000Z","updated":"2017-06-24T20:49:59.000Z","comments":true,"path":"2016/07/25/Amazon-dash-dd-wrt-and-ifttt/","link":"","permalink":"https://jed.bz/2016/07/25/Amazon-dash-dd-wrt-and-ifttt/","excerpt":"I snagged some amazon dash buttons on Prime day for $0.99 a piece. I saw some other hacks that required a full time server, here&#39;s a way to do it with only dd-wrt.","text":"I snagged some amazon dash buttons on Prime day for $0.99 a piece. I saw some other hacks that required a full time server, here&#39;s a way to do it with only dd-wrt. Once my amazon dash arrived in the mail, I went searching online for hacking methods and I found this gem. That lazy dad&#39;s approach was pretty sweet, but it&#39;s written in python, and I&#39;m a lazier dad. Since I&#39;m a javascript guy, I immediately searched and found this node variation of the same python script. The main problem is that both the python and node script require libpcap installed on the server to sniff the ARP probes made by the dash. I didn&#39;t really want yet another process running on my home server, so I thought I could reuse DD-WRT to do the lifting for me. How the Dash worksEach time the dash button is pressed, it turns on, connects to the wifi network, which makes a purchase request to amazon, then turns itself off. Originally, I thought I could re-route the requests to my local server instead. But since the requests are SSL with end to end encryption, it makes them nearly impossible to replay. So instead, I went with the low tech solution. When the dash joins my network, fire off a request to some other url. Enable LoggingStep one is to enable logging on the router. So under Services, System Log, enable Syslogd Grep the logs Disclaimer - This is how the logs look on my router, the logs on your router may be different because you may have a different network configuration, so here&#39;s all the steps I took so you can reproduce in your environment. Now that logging is enabled. SSH or telnet to the router, and tail the logs to look for the dash button. root@DD-WRT:~# tail /tmp/var/log/messages -n15 -f When you tail this file then press the dash button you should see an output similar to this It looks like when a new client connects to the wifi, a line is added to the log that contains this: SRC=0.0.0.0 DST=255.255.255.255 So if we grep for that string tail /tmp/var/log/messages -n15 -f | grep &quot;SRC=0.0.0.0 DST=255.255.255.255&quot; We should only see new connections to your network. You can also test this by toggling wifi on/off from your mobile device In that string, after the ff:ff:ff:ff:ff:ff and before the :08:00 you will find the mac address of the dash. In my example, the mac address of my dash is d0:03:4b:9e:69:5c Grep the log and make requestNow that we know what we are looking for, lets create a script to parse the log file, and send a request to a server of our choosing when the button is pressed So the script is first killing the tail process if its running. This is important because the DDWRT docs state that a startup script can be called multiple times, so this insures one instance. Then, for each line in the log, if the line contains our search string of ff:ff:ff:ff:ff:ff:44:65:0d:b2:a2:c6:08:00 then tell wget to make a web request to http://192.168.1.13:3000/dash/playdoe which is a bogus url, but it demonstrates the point. To make this script run on on dd-wrt, go to Administration &gt; Commands, then paste the script into the Command Shell text area. Click Save Startup, then reboot the router. Now we should be making requests to our own server when the dash button is pressed :) I imagine a similar script could be used on OpenWRT or tomato, but I don&#39;t have those anymore. Integrate IFTTTI understand that not everyone has a home server ready to intercept these dash buttons. So, lets wire it up to connect to ifttt.com so you can have infinite integrations. To do this, we need to connect to the maker channel. Once you connect the maker channel, you should see an auto generated key, save it because you&#39;ll need this later. Now click create a new recipe Trigger channel should be Maker Choose trigger should be Receive a web request Event Name can be whatever you want, but remember the name Action channel can be whatever you want again. This is the creative part on your end. You can log to a google spreadsheet, post to slack, turn off your harmony tv, whatever you want. Follow through to complete the recipe Now let&#39;s modify the start up script we wrote previously to trigger ifttt. In my example below, my key is 123456 and my event name is lights_on That&#39;s it, reboot the router and press the dash button to test it out! Block all Internet accessThe last step is to disable internet access on the dash. This is an optional step, but I like the idea of stopping amazon from doing a firmware update without approval. To do this go to Access Restrictions &gt; WAN access. Then do the following: Enable the Policy Set Policy Name to no dash internet Click Deny Then click Edit List of Clients Enter the dash&#39;s mac address in the box Save then Apply on both pages","categories":[],"tags":[{"name":"dash","slug":"dash","permalink":"https://jed.bz/tags/dash/"},{"name":"dd-wrt","slug":"dd-wrt","permalink":"https://jed.bz/tags/dd-wrt/"},{"name":"home automation","slug":"home-automation","permalink":"https://jed.bz/tags/home-automation/"}],"keywords":[]}]}